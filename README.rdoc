В качестве лучшего знакомства советую поиграться с <em>script/console</em>. 

Робот представлен модулем +Player+. Чтобы посмотреть доступные методы данного модуля, напишите в консоли <tt>Player.m</tt>.

Метод +m+ можно применить на любой объект, чтобы получить список методов, определенных непосредственно на нем (без учета стандартных и наследуемых методов объектов).

Используя <tt>reload!</tt>, можно без перезапуска консоли редактировать код проекта.

Чтобы перезагрузить робота достаточно напечатать <tt>Robocup.restart</tt>.  

Структура соединений робота:

* голова:
  <em>h1, h2</em>
  
* левая рука:
  <em>la1, la2, la3, la4</em>

* правая рука:
  <em>ra1, ra2, ra3, ra4</em>

* левая нога:
  <em>ll1, ll2, ll3, ll4, ll5, ll6</em>

* правая нога:
  <em>rl1, rl2, rl3, rl4, rl5, rl6</em>


Для получения информации о текущем угле соединения вызовите соответствующий метод у модуля +Player+.
Например, <tt>Player.h1</tt> - вернет информацию об угле первого соединения головы.

Для изменения угла соединения используйте присвоение, к примеру, <tt>Player.h1 = 1</tt>.

Чтобы следить за состоянием определенного соединения используйте наблюдателей.

Пример, в котором будет отображаться информация об изменении угла для <em>h1</em>, пока величина угла не достигнет 10 градусов.

  Player.add_observer(:h1) do |old_value, new_value|   
    puts "Угол соединения h1 изменился от #{old_value} к #{new_value}."  
    throw :done if new_value.abs > 10
  end

Чтобы посмотреть список определенных для робота поз, наберите <tt>Player.position.m</tt>. Чтобы вызвать конкретную позу, к примеру _hi_ - напишите <tt>Player.position.hi</tt>.

Все позы определены в формате yaml и находятся в папке <em>lib/player/position/</em>.