#!/usr/bin/env ruby

# TODO: move to the vendor
require 'rubygems'
# TODO: print suggestion to install gem termios to make raw_console faster on *nix
require 'rawline'

$:.unshift File.join(File.dirname(__FILE__), '..', 'lib')
require 'client/socket'
require 'client/parser'
require 'player'

SERVER = ARGV.first || '127.0.0.1'
Thread.abort_on_exception = true
detailed_flag = true
filter_node = ''

editor = RawLine::Editor.new

editor.bind(:ctrl_x) { puts "Exiting..."; exit }

editor.bind(:ctrl_t) do
  detailed_flag = !detailed_flag
  editor.write_line "Detailed info is #{detailed_flag}"
end

editor.bind(:ctrl_a) do
  word = editor.line.word[:text]
  editor.write_line "Completion info:\n #{editor.completion_proc.call(word).join ' '}"
end

editor.completion_proc = proc {|word| Player.effectors.values.select {|it| it.include? word }}
editor.completion_append_string = ' '

Client::Socket.open SERVER do |socket|
  Thread.new do
    loop do
      command = editor.readline '>> '

      unless command.include? 'info'
        editor.history.push command
        
        case command
        when 'exit'
          exit
        when 'detailed toggle'
          detailed_flag = !detailed_flag
        when /filter(.*)/
          filter_node = Regexp.escape($1.lstrip)
        end
      
        socket.puts "(#{command})"        
        if detailed_flag
          result = socket.gets
          puts filter_node.empty? ? result : Client::Parser.filter(result, filter_node)
        end
      end
    end  
  end
  
  loop do
    socket.gets
  end  
end